// Define some metadata for publishing pipeline on GitHub
manifest {
	author = 'Georgie Samaha'
	name = 'Genomics001: Parabricks-Genomics-nf'
	description = 'GPU-enabled mapping and short variant calling with Parabricks'
	homePage = 'https://github.com/Sydney-Informatics-Hub/Parabricks-Genomics-nf'
}

// Mandate a minimum version of nextflow required to run the pipeline
nextflowVersion = '!>=20.07.1'

// Set default workflow parameters
// See https://www.nextflow.io/docs/latest/config.html#scope-params 
params {
    	pbs_account = "$PROJECT"
	storage_account = ''
    	whoami = ''
	singularityCacheDir = ''
	help	= false
	outdir = "results"
	input	= false
	cohort_name = false
	ref	= false
	gadi_account = false
	vep_species = "" 
	vep_assembly = ""
	vep_cachedir = ""
	download_vep_cache = false
}

// Fail a task if any command returns non-zero exit code
// See https://www.nextflow.io/docs/latest/process.html#script 
// See https://sydney-informatics-hub.github.io/tidbits/debugging-bash.html 
shell = ['/bin/bash', '-euo', 'pipefail']

// Produce a workflow diagram
//dag {
//	enabled = true
//	file = "${params.outdir}/runInfo/dag.svg"
//}

// Output resource and runtime reports for a workflow run
//report {
//	enabled = true
//	file = "${params.outdir}/runInfo/report.html"
//}

// Output an html timeline report 
//timeline {
//	enabled = true
//	file = "${params.outdir}/runInfo/timeline.html"
//}

// Output process execution trace file 
// See https://www.nextflow.io/docs/latest/tracing.html#trace-report
//trace {
//	enabled = true
//	file = "${params.outdir}/runInfo/trace.txt"
//}

// Enable profiles for different compute infrastructures or set up
// See https://www.nextflow.io/docs/latest/config.html#config-profiles
//profiles {
//	test	{ includeConfig "config/test.config"}
//}

singularity {
	enabled = true
	autoMounts = true
	autoCleanUp = true
	
	cacheDir = params.singularityCacheDir
		? params.singularityCacheDir
        	: "/scratch/${params.pbs_account}/${params.whoami}/.nextflow/singularity"
		
		
	libraryDir = params.singularityCacheDir
		? params.singularityCacheDir
        	: "/scratch/${params.pbs_account}/${params.whoami}/.nextflow/singularity"	
	
	temp = "/scratch/${params.pbs_account}/${params.whoami}/.nextflow/singularity/temp"	
}

// Set default resources for each process 
// See https://www.nextflow.io/docs/latest/config.html?highlight=withname#scope-process 
process {
	module = 'singularity'
	cache = 'lenient'
	project = "${params.gadi_account}"

	
	// Enable provision of multiple storage paths for -l directive
	storage = ''
    	storage = 'scratch/${params.pbs_account}+gdata/${params.pbs_account}'
    	ext.storageAccountString = { accountString ->
        	accountString.tokenize(',').collect { acct ->
            	"scratch/${acct}+gdata/${acct}"
        	}.join('+')
    	}
    
    	if (params.storage_account) {
        	storage = "scratch/${params.pbs_account}+gdata/${params.pbs_account}+${ext.storageAccountString(params.storage_account)}"
    	} 
	else {
        	storage = "scratch/${params.pbs_account}+gdata/${params.pbs_account}"
    	} 	
	

	withName: 'check_input' {
		executor = 'local'
	}

	withName: 'bwa_index' {
		executor = 'local'
	}

	withName: 'download_vep' {
		executor = 'pbspro'
		queue = 'copyq' 
		cpus = 1
		time = '10h'
		memory = 4.Gb
	}	

	withName: 'pb_fq2bam' {
		executor = 'pbspro'
		queue = 'gpuvolta' 
		cpus = 24
		gpus = 2
		time = '1h'
		memory = 190.Gb
	}

	withName: 'pb_collectmetrics' {
		executor = 'pbspro'
		queue = 'gpuvolta' 
		cpus = 24
		gpus = 2
		time = '1h'
		memory = 190.Gb
	}

	withName: 'pb_deepvariant' {
		executor = 'pbspro'
		queue = 'gpuvolta' 
		cpus = 24
		gpus = 2
		time = '1h'
		memory = 190.Gb
	}

	withName: 'glnexus_joint_call' {
		executor = 'local'
	}
	
	withName: 'bcftools_convert' {
		executor = 'local'
	}

	withName: 'annotate_vcf' {
		executor = 'local'
		cpus = 2 
	}

	//withName: 'multiqc' {
	//	executor = 'local'
	//}
		}
