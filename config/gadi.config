// Set gadi parameters
// See https://www.nextflow.io/docs/latest/config.html#scope-params 
params {
	gadi_account = System.getenv("PROJECT")
	storage_account = ''
	whoami = ''
	singularityCacheDir = ''
}

// Autodetect relevant Singularity env variables 
singularity {
	enabled = true
	autoMounts = true
	autoCleanUp = true
	cacheDir = params.singularityCacheDir ? params.singularityCacheDir
        	: "/scratch/${params.gadi_account}/${params.whoami}/.nextflow/singularity"

// Excluding for now as it isn't really needed and causes issues if not previously set 		
	//libraryDir = params.singularityCacheDir ? params.singularityCacheDir
  //      	: "/scratch/${params.gadi_account}/${params.whoami}/.nextflow/singularity"	
	
	temp = "/scratch/${params.gadi_account}/${params.whoami}/.nextflow/singularity/temp"	
}

// Set default resources for each process 
// See https://www.nextflow.io/docs/latest/config.html?highlight=withname#scope-process 
process {
	module = 'singularity'
	cache = 'lenient'
	executor = 'pbspro'
	project = "${params.gadi_account}"
	// Enable provision of multiple storage paths for -lstorage directive
	storage = ''
  storage = 'scratch/${params.gadi_account}+gdata/${params.gadi_account}'
  ext.storageAccountString = { 
		accountString -> accountString.tokenize(',')
		.collect { acct ->"scratch/${acct}+gdata/${acct}"
    }.join('+')
  }

  if (params.storage_account) {
    storage = "scratch/${params.gadi_account}+gdata/${params.gadi_account}+${ext.storageAccountString(params.storage_account)}"
    } 
	else {
    storage = "scratch/${params.gadi_account}+gdata/${params.gadi_account}"
    } 

// Set process-specific resource configuration
	withName: 'check_input' {
		executor = 'local'
	}

	withName: 'bwa_index' {
		queue = 'normal'
		cpus = 1
		memory = 4.Gb
	}

	withName: 'fastqc' {
		queue = 'normal'
		cpus = 1
		memory = 4.Gb
	}

	withName: 'bcftools_convert' {
		queue = 'normal'
		cpus = 1
		memory = 4.Gb
	}

	withName: 'multiqc' {
		queue = 'normalbw'
		cpus = 1
		memory = 10.Gb
	}

	withName: 'pb_fq2bam' {
		queue = 'gpuvolta' 
		cpus = 48
		gpus = 4
		time = '4h'
		memory = 380.Gb
	}

	withName: 'pb_deepvariant' {
		queue = 'gpuvolta' 
		cpus = 48
		gpus = 4
		time = '4h'
		memory = 380.Gb
	}

	withName: 'pb_collectmetrics' {
		queue = 'gpuvolta' 
		cpus = 12
		gpus = 1
		time = '1h'
		memory = 190.Gb
	}

	withName: 'glnexus_joint_call' {
    queue = 'normal'
    cpus = 48
    time = '10h'
    memory = 190.Gb
	}
	
	withName: 'download_vep' {
		queue = 'copyq' 
		cpus = 1
		time = '10h'
		memory = 8.Gb
	}	

	withName: 'annotate_vcf' {
		queue = 'normal' 
		cpus = 12 
		time = '5h'
		memory = 190.Gb
	}}
	
// Write custom trace file with outputs required for SU calculation
def trace_timestamp = new java.util.Date().format('yyyy-MM-dd_HH-mm-ss')
trace {
    enabled = true
    overwrite = false
    file = "${params.outdir}/runInfo/gadi-nf-core-trace-${trace_timestamp}.txt"
    fields = 'name,status,exit,duration,realtime,cpus,%cpu,memory,%mem,rss'
}
